// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: media-service.proto

package genproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPhotoUploadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *GetPhotoUploadUrlRequest) Reset() {
	*x = GetPhotoUploadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhotoUploadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhotoUploadUrlRequest) ProtoMessage() {}

func (x *GetPhotoUploadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhotoUploadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetPhotoUploadUrlRequest) Descriptor() ([]byte, []int) {
	return file_media_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPhotoUploadUrlRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetPhotoUploadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UploadUrl string `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
}

func (x *GetPhotoUploadUrlResponse) Reset() {
	*x = GetPhotoUploadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhotoUploadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhotoUploadUrlResponse) ProtoMessage() {}

func (x *GetPhotoUploadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhotoUploadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetPhotoUploadUrlResponse) Descriptor() ([]byte, []int) {
	return file_media_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPhotoUploadUrlResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetPhotoUploadUrlResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

type ListFilesByDateHourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Date     string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Hour     int32  `protobuf:"varint,3,opt,name=hour,proto3" json:"hour,omitempty"`
}

func (x *ListFilesByDateHourRequest) Reset() {
	*x = ListFilesByDateHourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesByDateHourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesByDateHourRequest) ProtoMessage() {}

func (x *ListFilesByDateHourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesByDateHourRequest.ProtoReflect.Descriptor instead.
func (*ListFilesByDateHourRequest) Descriptor() ([]byte, []int) {
	return file_media_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListFilesByDateHourRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ListFilesByDateHourRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ListFilesByDateHourRequest) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

type ListFilesByDateHourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalFiles int32       `protobuf:"varint,1,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`
	Files      []*FileInfo `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ListFilesByDateHourResponse) Reset() {
	*x = ListFilesByDateHourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilesByDateHourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesByDateHourResponse) ProtoMessage() {}

func (x *ListFilesByDateHourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesByDateHourResponse.ProtoReflect.Descriptor instead.
func (*ListFilesByDateHourResponse) Descriptor() ([]byte, []int) {
	return file_media_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListFilesByDateHourResponse) GetTotalFiles() int32 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *ListFilesByDateHourResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	DownloadUrl string `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_media_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_media_service_proto_rawDescGZIP(), []int{4}
}

func (x *FileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfo) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

var File_media_service_proto protoreflect.FileDescriptor

var file_media_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x79,
	0x65, 0x22, 0x37, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x22, 0x61, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x22, 0x6a, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x65,
	0x79, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0x4a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x32, 0xdc,
	0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x79,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x61, 0x6c,
	0x61, 0x64, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x6c,
	0x61, 0x64, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x79, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a,
	0x11, 0x2e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_media_service_proto_rawDescOnce sync.Once
	file_media_service_proto_rawDescData = file_media_service_proto_rawDesc
)

func file_media_service_proto_rawDescGZIP() []byte {
	file_media_service_proto_rawDescOnce.Do(func() {
		file_media_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_media_service_proto_rawDescData)
	})
	return file_media_service_proto_rawDescData
}

var file_media_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_media_service_proto_goTypes = []any{
	(*GetPhotoUploadUrlRequest)(nil),    // 0: saladineye.GetPhotoUploadUrlRequest
	(*GetPhotoUploadUrlResponse)(nil),   // 1: saladineye.GetPhotoUploadUrlResponse
	(*ListFilesByDateHourRequest)(nil),  // 2: saladineye.ListFilesByDateHourRequest
	(*ListFilesByDateHourResponse)(nil), // 3: saladineye.ListFilesByDateHourResponse
	(*FileInfo)(nil),                    // 4: saladineye.FileInfo
}
var file_media_service_proto_depIdxs = []int32{
	4, // 0: saladineye.ListFilesByDateHourResponse.files:type_name -> saladineye.FileInfo
	0, // 1: saladineye.MediaService.GetPhotoUploadUrl:input_type -> saladineye.GetPhotoUploadUrlRequest
	2, // 2: saladineye.MediaService.ListFilesByDateHour:input_type -> saladineye.ListFilesByDateHourRequest
	1, // 3: saladineye.MediaService.GetPhotoUploadUrl:output_type -> saladineye.GetPhotoUploadUrlResponse
	3, // 4: saladineye.MediaService.ListFilesByDateHour:output_type -> saladineye.ListFilesByDateHourResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_media_service_proto_init() }
func file_media_service_proto_init() {
	if File_media_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_media_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetPhotoUploadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetPhotoUploadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListFilesByDateHourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListFilesByDateHourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_media_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_service_proto_goTypes,
		DependencyIndexes: file_media_service_proto_depIdxs,
		MessageInfos:      file_media_service_proto_msgTypes,
	}.Build()
	File_media_service_proto = out.File
	file_media_service_proto_rawDesc = nil
	file_media_service_proto_goTypes = nil
	file_media_service_proto_depIdxs = nil
}
